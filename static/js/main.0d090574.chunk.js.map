{"version":3,"sources":["components/Bookcard.js","App.js","index.js"],"names":["BookCard","thumbnail","title","pageCount","language","author","publisher","description","previewLink","infoLink","useState","modal","setModal","toggle","style","width","className","top","height","src","alt","onClick","isOpen","id","type","href","color","target","rel","App","maxResults","setMaxResults","startIndex","setStartIndex","query","setQuery","loading","setLoading","cards","setCards","handleSubmit","toast","error","axios","get","then","res","data","totalItems","items","length","catch","err","response","message","zindex","zIndex","size","placeholder","value","onChange","e","for","map","item","i","volumeInfo","imageLinks","authors","handleCards","render","document","getElementById"],"mappings":"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","file":"static/js/main.0d090574.chunk.js","sourcesContent":["import { useState } from 'react';\r\nimport { Card, CardTitle, CardImg, CardBody, Button, Modal } from 'reactstrap';\r\nimport '../App.js'\r\n\r\nexport const  BookCard = ({ \r\n    thumbnail,\r\n    title,\r\n    pageCount,\r\n    language,\r\n    author,\r\n    publisher,\r\n    description,\r\n    previewLink,\r\n    infoLink\r\n }) => {\r\n\r\n    //states\r\n    const [ modal, setModal] = useState(false);\r\n    const toggle = () => setModal(!modal);\r\n\r\n    return <Card style={{ width: '233px' }} className=\"m-auto\">\r\n        <CardImg top style={{ width: \"100%\", height: '233px' }} src={thumbnail} alt=\"Card image\" />\r\n        <CardBody>\r\n            <CardTitle className='card-title'>{ title }</CardTitle>\r\n            <Button onClick={toggle}>More Info</Button>\r\n        </CardBody>\r\n        <Modal isOpen={modal} toggle={toggle}>\r\n            <div className=\"modal-header d-flex justify-content-center\">\r\n            <h5 className=\"modal-title text-center\" id='exampleModalLabel'>{ title }</h5>\r\n            <button aria-label='close' className='close' type='button' onClick={ toggle }>\r\n                <span aria-hidden={true}>X</span>\r\n            </button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n                <div className=\"d-flex justify-content-between\">\r\n                    <img src={thumbnail} alt={title} style={{ width: \"100%\", height: '233px' }}/>\r\n                    <div>\r\n                        <p>Page Count: { pageCount }</p>\r\n                        <p>Language: { language }</p>\r\n                        <p>Author: { author }</p>\r\n                        <p>Publisher: { publisher }</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"mt-3\">{description}</div>\r\n                <div className=\"modal-footer\">\r\n                        <div className=\"left-slide\">\r\n                            <a href={previewLink} className=\"btn-link\" color=\"default\" type=\"button\" target=\"_blank\" rel=\"noopener noreferrer\">Preview Link</a>\r\n                        </div>\r\n                        <div className=\"divider\"></div>\r\n                        <div className=\"right-slide\">\r\n                            <a href={infoLink} className=\"btn-link\" color=\"default\" type=\"button\" target=\"_blank\" rel=\"noopener noreferrer\">Info Link</a>\r\n                        </div>\r\n                    </div>                    \r\n                </div>\r\n        </Modal>\r\n    </Card>\r\n}","import \"./App.css\"\nimport { BookCard } from \"./components/Bookcard\";\nimport {\n   InputGroup, \n   Input, \n   Button, \n   FormGroup, \n   Label, \n   Spinner,\n} from \"reactstrap\";\nimport { useState } from \"react\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport axios from 'axios';\n\n\nconst App = () => {\n  //state\n  const [maxResults, setMaxResults] = useState(10);\n  const [startIndex, setStartIndex] = useState(1);\n  const [query, setQuery] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [cards, setCards] = useState([]);\n\n  //Handle Search\n  const handleSubmit = () => {\n    setLoading(true)\n    if(maxResults > 40 || maxResults < 1){\n      toast.error('max results must be between 1 and 40')\n    }else {\n      axios.get(`https://www.googleapis.com/books/v1/volumes?q=${query}&maxResults=${maxResults}&startIndex=${startIndex}`)\n      .then(res => {\n        if(startIndex >= res.data.totalItems || startIndex < 1){\n          toast.error(`max result must be between 1 and ${res.data.totalItems}` );\n        }else{\n          if(res.data.items.length > 0){\n            setCards(res.data.items);\n            setLoading(false);\n          }\n        }\n      })\n      .catch(err => {\n        setLoading(true);\n        toast.error(`${err.response.data.error.message}`);\n      })\n\n    }\n  }\n\n  const handleCards = () => {\n    const items = cards.map((item, i) => {\n      let thumbnail = '';\n      if(item.volumeInfo.imageLinks.thumbnail){\n        thumbnail = item.volumeInfo.imageLinks.thumbnail;\n      }\n      return (\n        <div className=\"col-lg-4 mb-3\" key={item.id}>\n          <BookCard \n          thumbnail={thumbnail} \n          title={ item.volumeInfo.title }\n          pageCount={ item.volumeInfo.pageCount}\n          language={ item.volumeInfo.language }\n          author={ item.volumeInfo.authors }\n          publisher={ item.volumeInfo.publisher }\n          description={ item.volumeInfo.description }\n          previewLink={ item.volumeInfo.previewLink }\n          infoLink={ item.volumeInfo.infoLink }\n          />\n        </div>\n      )\n    })\n    if(loading){\n      return(\n        <div className=\"d-flex justify-content-center mt-3\">\n          <Spinner style={{ width: '5rem', height: '3rem' }}/>\n        </div>\n      )\n  }else{\n    return(\n      <div className=\"container my-5\">\n        <div className=\"row\">\n          {items}\n        </div>\n      </div>\n    )\n  }\n  }\n    //main show case\n  const mainHeader = () => {\n    \n    return (\n      <div className=\"main-image d-flex justify-content-center align-items-center flex-column\">\n        <div className=\"filter\"></div>\n        <h1 className=\"display-2 text-center text-white mb-3\" style={{zindex: 2}}>\n          Google books\n        </h1>\n        <div style={{ width:\"60%\", zIndex:2 }}>\n          <InputGroup size=\"lg\" className=\"mb-3\">\n            <Input placeholder=\"Book search\" \n            value={ query } \n            onChange={ e=> setQuery(e.target.value)} \n            />\n            <Button color=\"secondary\" onClick={handleSubmit}>\n              <i className=\"fa fa-search\"></i>\n            </Button>\n          </InputGroup>\n          <FormGroup className=\"ml-s\">\n            <Label for=\"maxResults\">Max results</Label>\n            <Input \n            type=\"number\" \n            id=\"maxResults\" \n            placeholder=\"Max Results\"\n            value={ maxResults } \n            onChange={ e=> setMaxResults(e.target.value)}>\n            </Input>\n          </FormGroup>\n          <FormGroup className=\"ml-s\">\n            <Label for=\"startIndex\">Start Index</Label>\n            <Input \n            type=\"number\" \n            id=\"startIndex\" \n            placeholder=\"Start Index\"\n            value={ startIndex } \n            onChange={ e => setStartIndex(e.target.value)}>\n            </Input>\n          </FormGroup>\n          <div className=\"d-flex text-white justify-content-center\"></div>\n        </div>\n      </div>\n    );\n  }\n  return(\n    <div className=\"w-100 h-100\">\n      {mainHeader()}\n      {handleCards()}\n      <ToastContainer/>\n    </div>\n  )\n}\n\n\nexport default App;\n","import { StrictMode } from 'react';\nimport { render } from 'react-dom';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\n\nrender(\n  <StrictMode>\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>\n  </StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}